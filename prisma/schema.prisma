generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                   String    @id
  email                String    @unique
  subscriptionStatus   String    @default("free")
  tokens               Int       @default(5)
  tokenType            String    @default("free")
  stripeCustomerId     String?   @unique
  stripeSubscriptionId String?   @unique
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  photos            Photo[]
  playgroundPhotos  PlaygroundPhoto[]
  tokenTransactions TokenTransaction[]

  @@map("users")
}

model TokenTransaction {
  id        String   @id @default(cuid())
  userId    String
  amount    Int
  type      String
  reason    String?
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@map("token_transactions")
}

model Photo {
  id            String   @id @default(cuid())
  userId        String
  originalUrls  String[]
  generatedUrl  String
  preset        String
  isWatermarked Boolean  @default(true)
  tokensCost    Int      @default(1)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  revisions Revision[]

  @@index([userId])
  @@map("photos")
}

model PlaygroundPhoto {
  id          String   @id @default(cuid())
  userId      String
  prompt      String
  originalUrl String?
  results     Json
  tokensCost  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@map("playground_photos")
}

model Revision {
  id         String   @id @default(cuid())
  photoId    String
  prompt     String
  resultUrl  String
  tokensCost Int      @default(1)
  createdAt  DateTime @default(now())

  photo Photo @relation(fields: [photoId], references: [id], onDelete: Cascade)

  @@index([photoId])
  @@map("revisions")
}